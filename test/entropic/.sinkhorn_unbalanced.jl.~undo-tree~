(undo-tree-save-format-version . 1)
"ae90d2fb7abdbbd5bde9f2f1f6246ce7faddff19"
[nil nil nil nil (25331 12498 91120 417000) 0 nil]
([nil nil ((3039 . 3041) (#("1" 0 1 (fontified t)) . 3039) (undo-tree-id35 . -1) (t 25331 6613 742113 639000)) nil (25331 12498 91117 65000) 0 nil])
([nil nil ((3039 . 3040) (#("0" 0 1 (fontified t)) . -3039) (undo-tree-id33 . -1) (#("5" 0 1 (fontified t)) . -3040) (undo-tree-id34 . -1) 3041) nil (25331 12498 91111 198000) 0 nil])
([nil nil ((3039 . 3040)) nil (25331 12498 91104 563000) 0 nil])
([nil nil ((3506 . 3514) (#("        " 0 8 (fontified nil)) . 3505) (undo-tree-id32 . -8) (3505 . 3514) (#("        " 0 8 (fontified nil)) . 3504) (3504 . 3512) (3504 . 3505)) nil (25331 12498 91100 792000) 0 nil])
([nil nil ((3569 . 3570) (3568 . 3569) (#("\\varepsilon" 0 1 (syntax-table (1) fontified t) 1 11 (fontified t)) . 3568) (undo-tree-id20 . -11) 3579 (3566 . 3579) (3565 . 3566) (#("\\lambda" 0 1 (syntax-table (1) fontified t) 1 7 (fontified t)) . 3565) (undo-tree-id21 . -7) 3572 (3565 . 3572) (3563 . 3565) (3562 . 3563) (#("\\nu" 0 1 (syntax-table (1) fontified t) 1 3 (fontified t)) . 3562) (undo-tree-id22 . -3) 3565 (3562 . 3565) (3561 . 3562) (#("\\nu" 0 1 (syntax-table (1) fontified t) 1 3 (fontified t)) . 3561) (undo-tree-id23 . -3) 3564 (3560 . 3564) (#("\\" 0 1 (syntax-table (1) fontified t)) . -3560) (undo-tree-id24 . -1) (#("C" 0 1 (fontified t)) . -3561) (undo-tree-id25 . -1) 3562 (3558 . 3562) (3557 . 3558) (#("\\mu" 0 1 (syntax-table (1) fontified t) 1 3 (fontified t)) . 3557) (undo-tree-id26 . -3) 3560 (3557 . 3560) (3556 . 3557) (#("\\mu" 0 1 (syntax-table (1) fontified t) 1 3 (fontified t)) . 3556) (undo-tree-id27 . -3) 3559 (3553 . 3559) (3552 . 3553) (#("\\nu" 0 1 (syntax-table (1) fontified t) 1 3 (fontified t)) . 3552) (undo-tree-id28 . -3) 3555 (3552 . 3555) (3551 . 3552) (#("\\mu" 0 1 (syntax-table (1) fontified t) 1 3 (fontified t)) . 3551) (undo-tree-id29 . -3) 3554 (3548 . 3554) (3547 . 3548) (#("\\nu" 0 1 (syntax-table (1) fontified t) 1 3 (fontified t)) . 3547) (undo-tree-id30 . -3) 3550 (3545 . 3550) (3544 . 3545) (#("\\mu" 0 1 (syntax-table (1) fontified t) 1 3 (fontified t)) . 3544) (undo-tree-id31 . -3) 3547 (3528 . 3547) (3513 . 3528) (3505 . 3513)) nil (25331 12498 91088 11000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3521) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 3522 (#("divergence" 0 10 (fontified t)) . -3522) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . 4) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -10) 3532) nil (25331 12498 91055 535000) 0 nil])
([nil nil ((3532 . 3533)) nil (25331 12498 91036 398000) 0 nil])
([nil nil ((3559 . 3561) (3558 . 3559) (#("\\lambda" 0 1 (syntax-table (1) fontified t) 1 7 (fontified t)) . 3558) (undo-tree-id8 . -7) 3565 (3558 . 3565)) nil (25331 12498 91033 535000) 0 nil])
([nil nil ((#("        sinkhorn_unbalanced2(μ, ν, Cμν, Cμμ, Cνν, λ, λ, ε)
" 0 29 (fontified t) 29 32 (fontified t) 32 36 (fontified t) 36 37 (fontified t) 37 41 (fontified t) 41 42 (fontified t) 42 46 (fontified t) 46 47 (fontified t) 47 50 (fontified t) 50 53 (fontified t) 53 56 (fontified t) 56 58 (fontified t) 58 59 (fontified t)) . 3505) (undo-tree-id6 . -59) (undo-tree-id7 . 3)) nil (25331 12498 91027 389000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3504) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 3505) nil (25331 12498 91015 376000) 0 nil])
([nil nil ((428 . 429) (t 25331 12498 99823 549000)) nil (25331 12532 68041 129000) 0 nil])
([nil nil ((429 . 430) (#("1" 0 1 (fontified t)) . 429)) nil (25331 12588 333437 462000) 0 nil] [nil nil ((#("1" 0 1 (fontified t)) . 448) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1)) ((448 . 449)) (25331 12532 67579 827000) 0 nil])
([nil nil ((639 . 640)) nil (25331 12589 200528 59000) 0 nil])
nil
([nil nil ((428 . 429) (#("0" 0 1 (fontified t)) . -428) (undo-tree-id333 . -1) (#("5" 0 1 (fontified t)) . -429) (undo-tree-id334 . -1) 430) nil (25331 12596 178622 131000) 0 nil] [nil nil ((644 . 649) (#(" " 0 1 (fontified t)) . -644) (undo-tree-id96 . -1) (#("=" 0 1 (fontified t)) . -645) (undo-tree-id97 . -1) 646 (640 . 646) (#("t" 0 1 (fontified t)) . -640) (undo-tree-id98 . -1) (#("o" 0 1 (fontified t)) . -641) (undo-tree-id99 . -1) 642 (640 . 642) (#(" " 0 1 (fontified t)) . -640) (undo-tree-id100 . -1) 641 (640 . 641)) ((#(" " 0 1 (fontified nil)) . 640) (undo-tree-id103 . -1) (640 . 641) (#("to" 0 1 (fontified nil) 1 2 (fontified nil)) . 640) (undo-tree-id104 . -2) (640 . 642) (#("rtol =" 0 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 640) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -6) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (644 . 646) (#("=1e-6" 0 4 (fontified t) 4 5 (fontified t)) . 644) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) (undo-tree-id292 . -4) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -4) (undo-tree-id317 . -4) (undo-tree-id318 . -4) (undo-tree-id319 . -4) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4)) (25331 12588 990957 268000) 0 nil])
([nil nil ((3744 . 3745) (#("6" 0 1 (fontified t)) . 3744) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (t 25331 12596 189285 289000)) nil (25337 53058 42914 743000) 0 nil])
([nil nil ((648 . 649) (#("6" 0 1 (fontified t)) . 648)) ((648 . 649) (#("3" 0 1 (fontified t)) . 648) (undo-tree-id102 . -1)) (25331 12588 682925 910000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 3040) (t 25337 53058 53395 546000)) nil (25337 53136 50729 812000) 0 nil])
([nil nil ((648 . 649) (#("3" 0 1 (fontified t)) . -648) (undo-tree-id95 . -1) 649) ((648 . 649) (#("4" 0 1 (fontified t)) . 648) (undo-tree-id101 . -1)) (25331 12588 333552 840000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3039) (undo-tree-id85 . -1) 3040) nil (25337 53136 50725 552000) 0 nil])
([nil nil ((648 . 649) (#("4" 0 1 (fontified t)) . -648) (undo-tree-id94 . -1) 649) ((648 . 649) (#("5" 0 1 (fontified t)) . 648)) (25331 12588 333396 884000) 0 nil])
([nil current ((3040 . 3041) (#("5" 0 1 (fontified t)) . -3040) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 3041 (3039 . 3041) (#("1" 0 1 (fontified t)) . 3039) (undo-tree-id84 . 1)) nil (25337 53136 50710 885000) 0 nil])
nil
nil
